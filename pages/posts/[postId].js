import { useState } from 'react';
import Head from "next/head";
import { useRouter } from "next/router";
import { Fragment } from 'react';

import styles from '../../styles/SinglePostPage.module.css';

const PostPage = ({ post }) => {
    const [confirmDelete, setConfirmDelete] = useState(false);
    const router = useRouter();
    const { postId } = router.query;

    const confirmDeleteHandler = () => {
        setConfirmDelete(true);
    };

    const cancelDelete = () => {
        setConfirmDelete(false);
    };

    const deleteHandler = async () => {
        const response = await fetch('/api/api/', {
            method: 'DELETE',
            body: postId,
        });

        router.push('/');
    };

    return (
        <Fragment>
            <Head>
                <title>{post ? post.title : 'Open Blog'}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {post && 
                <article>
                    <div className={styles['img-container']}>
                        <img src={post.image} alt={post.title} />
                    </div>
                    <div className={styles.info}>
                        {!confirmDelete &&
                            <p>{post.date} | {post.author}</p>
                        }
                        {!confirmDelete &&
                            <button className={styles['action-button']} onClick={confirmDeleteHandler}>Delete</button>
                        }
                        {confirmDelete && 
                            <div className={styles['confirm-delete']}>
                                <p>Are you sure you want to delete this post?</p>
                                <button onClick={cancelDelete}>No</button>
                                <button onClick={deleteHandler}>Yes</button>
                            </div>
                        }
                    </div>
                    <h1 className={styles.title}>{post.title}</h1>
                    <p>{post.text}</p>
                </article>
            }
        </Fragment>
    );
};

export const getStaticPaths = async () => {
    const response = await fetch(`https://open-blog-nextjs-default-rtdb.europe-west1.firebasedatabase.app/blog-posts.json`);
    let data = await response.json();

    if (!data) {
        data = [];
    }

    return {
        fallback: 'blocking',
        paths: Object.entries(data).map(id => ({
            params: {
                postId: id[0].toString()
            }
        }))
    }
};

export const getStaticProps = async ({ params }) => {
    const response = await fetch(`https://open-blog-nextjs-default-rtdb.europe-west1.firebasedatabase.app/blog-posts/${params.postId}.json`);
    const post = await response.json();

    return {
        props: {
            post
        }
    };
};

export default PostPage;